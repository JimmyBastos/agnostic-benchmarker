{"version":3,"sources":["store.js","App.jsx","index.js"],"names":["randomColor","Math","random","toString","substr","_prevent","$evt","preventDefault","stopPropagation","store","Store","Object","classCallCheck","this","colors","createClass","key","value","amount","arguments","length","undefined","concat","startIndex","Array","fill","map","_","i","id","color","generateAmountOfColors","reverse","toConsumableArray","sort","next","curr","_ref","_ref2","slicedToArray","idxOne","idxTwo","size","newColorOne","newColorTwo","newColors","colorID","idx","findIndex","clr","slice","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","freeze","syncData","bind","assertThisInitialized","handleAdd","handleShuffle","handleSort","handleSwap","handleUpdateColor","handleDeleteColor","handleClear","setState","objectSpread","appendColors","shuffleColors","sortColorsById","rows","swapColors","updateColor","deleteColor","clearColors","_this2","TableRows","label","react_default","a","createElement","style","backgroundColor","className","padding","href","onClick","xmlns","viewBox","width","height","d","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7126cad2.chunk.js","sourcesContent":["// import _rnd from 'lodash/random'\n// import _shf from 'lodash/shuffle'\n\n// const rgbColorFactory = (red, green, blue) => `rgb(${red}, ${green}, ${blue})`\n\nconst randomColor = () => ('#' + (('000000' + (Math.random() * (16777215) | 0))).toString(16).substr(-6)) // tslint:disable-line\n\nfunction generateAmountOfColors (amount = 1, startIndex) {\n  return Array(amount).fill(0).map((_, i) => ({\n    id    : startIndex + (++i),\n    color : randomColor()\n  }))\n}\n\nexport class Store {\n  constructor () {\n    this.colors = []\n  }\n\n  appendColors (amount = 1) {\n    this.colors = [].concat(\n      generateAmountOfColors(amount, this.colors.length),\n      this.colors\n    )\n  }\n\n  shuffleColors () {\n    this.colors = this.colors.reverse()\n  }\n\n  sortColorsById () {\n    this.colors = [...this.colors].sort((next, curr) => (next.id - curr.id))\n  }\n\n  swapColors ([idxOne, idxTwo]) {\n    const size = this.colors.length\n    if (size > idxOne && size > idxTwo) {\n      const newColorOne = this.colors[idxTwo]\n      const newColorTwo = this.colors[idxOne]\n      const newColors = [...this.colors]\n      newColors[idxOne] = newColorOne\n      newColors[idxTwo] = newColorTwo\n      this.colors = newColors\n    }\n  }\n\n  deleteColor (colorID) {\n    const idx = this.colors.findIndex(clr => clr.id === +colorID)\n\n    if (~idx) {\n      this.colors = [].concat(\n        this.colors.slice(0, idx),\n        this.colors.slice(idx + 1)\n      )\n    }\n  }\n\n  updateColor (colorID) {\n    const idx = this.colors.findIndex(clr => clr.id === +colorID)\n    this.colors[idx].color = randomColor()\n  }\n\n  clearColors () {\n    this.colors = []\n  }\n}\n","import React, { Component } from 'react'\nimport './App.style.sass'\n\nimport { Store } from './store.js'\n\nfunction _prevent ($evt) {\n  $evt.preventDefault()\n  $evt.stopPropagation()\n}\n\nconst store = new Store()\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      colors : Object.freeze(store.colors),\n      amount : 100\n    }\n\n    this.syncData = this.syncData.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleShuffle = this.handleShuffle.bind(this)\n    this.handleSort = this.handleSort.bind(this)\n    this.handleSwap = this.handleSwap.bind(this)\n    this.handleUpdateColor = this.handleUpdateColor.bind(this)\n    this.handleDeleteColor = this.handleDeleteColor.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n  }\n\n  syncData () {\n    this.setState({ ...this.state, colors: store.colors })\n  }\n\n  handleAdd (amount = 1) {\n    store.appendColors(amount)\n    this.syncData()\n  }\n\n  handleShuffle () {\n    store.shuffleColors()\n    this.syncData()\n  }\n\n  handleSort () {\n    store.sortColorsById()\n    this.syncData()\n  }\n\n  handleSwap (rows) {\n    store.swapColors(rows)\n    this.syncData()\n  }\n\n  handleUpdateColor (id) {\n    store.updateColor(id)\n    this.syncData()\n  }\n\n  handleDeleteColor (id) {\n    store.deleteColor(id)\n    this.syncData()\n  }\n\n  handleClear () {\n    store.clearColors()\n    this.syncData()\n  }\n\n  render () {\n    const TableRows = this.state.colors.map(({ id, color: label, color }) => (\n      <tr\n        key={id}\n        style={{ backgroundColor: color }}\n        className='app-table-row'\n      >\n        {/* <!-- COLOR ID --> */}\n        <td className='app-table-id'>\n          <span\n            className='app-table-label'\n            style={{ padding: '6px' }}\n          >\n            {id}\n          </span>\n        </td>\n\n        {/* <!-- COLOR LABEL --> */}\n        <td\n          className='app-table-cell'\n        >\n          <span className='app-table-label'>\n            {label}\n          </span>\n        </td>\n\n        {/* <!-- ACTION: UPDATE COLOR --> */}\n        <td className='app-table-cell app-table-action'>\n\n          <a\n            href='#update'\n            className='button__update pure-button app-button app-table-label'\n            onClick={($evt) => { this.handleUpdateColor(id); _prevent($evt) }}\n          >\n            {/* <!-- button icon --> */}\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              viewBox='0 0 51.4 51.4'\n              width='24'\n              height='24'\n            >\n              <g fill='#fff'><path d='M1.7 25.2a1 1 0 0 0 1-1c0-6.065 4.935-11 11-11h24v8.964L51.4 12.2 37.7 2.236V11.2h-24a13.02 13.02 0 0 0-13 13 1 1 0 0 0 1 1zm38-19.036L48 12.2l-8.3 6.036V6.164zm10 20.036a1 1 0 0 0-1 1c0 6.065-4.935 11-11 11h-24v-8.964L0 39.2l13.7 9.964V40.2h24a13.02 13.02 0 0 0 13-13 1 1 0 0 0-1-1zm-38 19.036L3.4 39.2l8.3-6.036v12.072z' /></g>\n            </svg>\n          </a>\n        </td>\n\n        {/* <!-- ACTION: DELETE COLOR --> */}\n\n        <td className='app-table-cell app-table-action'>\n          <a\n            href='#delete'\n            className='button__delete pure-button app-button app-table-label'\n            onClick={($evt) => { this.handleDeleteColor(id); _prevent($evt) }}\n          >\n            {/* <!-- button icon --> */}\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              viewBox='0 0 59 59'\n              width='24'\n              height='24'\n            >\n              <g fill='#fff'><path d='M29.5 51a1 1 0 0 0 1-1V17a1 1 0 1 0-2 0v33a1 1 0 0 0 1 1zm-10 0a1 1 0 0 0 1-1V17a1 1 0 1 0-2 0v33a1 1 0 0 0 1 1zm20 0a1 1 0 0 0 1-1V17a1 1 0 1 0-2 0v33a1 1 0 0 0 1 1zm13-45H38.456c-.1-1.25-.495-3.358-1.813-4.7C35.8.434 34.75 0 33.5 0h-10c-1.252 0-2.3.434-3.144 1.3-1.318 1.353-1.703 3.46-1.813 4.7H6.5a1 1 0 1 0 0 2h2.04l1.915 46.02c.037 1.722 1.1 4.98 4.908 4.98h28.272c3.8 0 4.87-3.257 4.907-4.958L50.46 8h2.04a1 1 0 1 0 0-2zM21.792 2.68C22.24 2.223 22.8 2 23.5 2h10c.7 0 1.26.223 1.708.68.805.823 1.128 2.27 1.24 3.32H20.553c.112-1.048.435-2.496 1.24-3.32zm24.752 51.3c-.006.3-.144 3.02-2.908 3.02H15.364c-2.734 0-2.898-2.717-2.9-3.042L10.542 8h37.915l-1.913 45.98z' /></g>\n            </svg>\n          </a>\n        </td>\n      </tr>\n    ))\n\n    return (\n      <div id='app'>\n        <header className='app-header app-u-fixed app-u-pin-t app-u-shadow-lg'>\n          {/* <!-- APP MENU --> */}\n          <div className='app-container app-menu pure-menu pure-menu-horizontal'>\n            {/* <!-- BRAND: framework@version --> */}\n            <span className='app-menu-heading pure-menu-heading app-title'>\n              React\n            </span>\n          </div>\n\n          {/* <!-- APP ACTIONS --> */}\n          <div className='app-actions'>\n            {/* <!-- GRID --> */}\n            <div className='app-wrapper app-container'>\n              {/* <!-- ADD COLOR --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__add'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'LimeGreen' }}\n                  onClick={() => this.handleAdd(1)}\n                >Inserir 1 Item</button>\n              </div>\n\n              {/* <!-- LOAD 50 COLORS --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__populate'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'DodgerBlue' }}\n                  onClick={() => this.handleAdd(50)}\n                >Inserir 50 Itens</button>\n              </div>\n\n              {/* <!-- SWAP 2 ROWS --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__swap'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'OrangeRed' }}\n                  onClick={() => this.handleSwap([0, this.state.colors.length - 1])}\n                >Permutar 2 Itens</button>\n              </div>\n\n              {/* <!-- SHUFFLE COLORS --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__shuffle'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'DarkViolet' }}\n                  onClick={this.handleShuffle}\n                >Inverter Lista</button>\n              </div>\n\n              {/* <!-- SORT COLORS-- > */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__sort'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'FireBrick' }}\n                  onClick={this.handleSort}\n                >Ordernar Lista</button>\n              </div >\n\n              {/* <!--CLEAR COLORS-- > */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__clear'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'Crimson' }}\n                  onClick={this.handleClear}\n                >Limpar Lista</button>\n              </div >\n            </div >\n          </div >\n        </header >\n\n        {/* <!--APP TABLE-- > */}\n        <div className='app-container app-table-wrapper' >\n          <table className='app-table'>\n            <tbody className='app-table-body'>\n\n              {/* <!-- COLOR --> */}\n              {TableRows}\n            </tbody >\n          </table >\n        </div >\n      </div >\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport '../node_modules/pure-css'\nimport './assets/styles/main.sass'\n\nimport App from './App.jsx'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}
{"version":3,"sources":["store.js","App.jsx","index.js"],"names":["randomColor","red","green","blue","lower","arguments","length","undefined","upper","_random","concat","_currentIndex","_prevent","$evt","preventDefault","stopPropagation","store","Store","Object","classCallCheck","this","_colorList","createClass","key","value","amount","colors","startIndex","Array","fill","map","_","i","id","color","generateAmountOfColors","_shuffle","toConsumableArray","sort","next","curr","_ref","_ref2","slicedToArray","idxOne","idxTwo","size","newColorOne","newColorTwo","newColors","colorID","idx","findIndex","clr","slice","objectSpread","get","set","isArray","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","freeze","syncData","bind","assertThisInitialized","handleAdd","handleShuffle","handleSort","handleSwap","handleUpdateColor","handleDeleteColor","handleClear","setState","appendColors","shuffleColors","sortColorsById","rows","swapColors","updateColor","deleteColor","clearColors","_this2","TableRows","label","react_default","a","createElement","style","backgroundColor","className","padding","href","onClick","xmlns","viewBox","width","height","d","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f948c014.chunk.js","sourcesContent":["import _random from 'lodash/random'\nimport _shuffle from 'lodash/shuffle'\n\nconst rgbColorFactory = (red, green, blue) => `rgb(${red}, ${green}, ${blue})`\n\nconst randomColor = (lower = 0, upper = 255) =>\n  rgbColorFactory(\n    _random(lower, upper),\n    _random(lower, upper),\n    _random(lower, upper)\n  )\n\nlet _currentIndex = 0\n\nfunction generateAmountOfColors (amount = 1, startIndex = _currentIndex) {\n  return Array(amount).fill(0).map((_, i) => ({\n    id    : startIndex + (++i),\n    color : randomColor()\n  }))\n}\n\nexport class Store {\n  constructor () {\n    this._colorList = []\n  }\n\n  get colors () {\n    return this._colorList\n  }\n\n  set colors (colors) {\n    this._colorList = colors\n    if (Array.isArray(colors)) {\n      _currentIndex = this._colorList.length\n    }\n  }\n\n  appendColors (amount = 1) {\n    this.colors = [].concat(\n      generateAmountOfColors(amount),\n      this.colors\n    )\n  }\n\n  shuffleColors () {\n    this.colors = _shuffle(this.colors)\n  }\n\n  sortColorsById () {\n    this.colors = [...this.colors].sort((next, curr) => (next.id - curr.id))\n  }\n\n  swapColors ([idxOne, idxTwo]) {\n    const size = this.colors.length\n    if (size > idxOne && size > idxTwo) {\n      const newColorOne = this.colors[idxTwo]\n      const newColorTwo = this.colors[idxOne]\n      const newColors = [...this.colors]\n      newColors[idxOne] = newColorOne\n      newColors[idxTwo] = newColorTwo\n      this.colors = newColors\n    }\n  }\n\n  deleteColor (colorID) {\n    const idx = this.colors.findIndex(clr => clr.id === +colorID)\n\n    if (~idx) {\n      this.colors = [].concat(\n        this.colors.slice(0, idx),\n        this.colors.slice(idx + 1)\n      )\n    }\n  }\n\n  updateColor (colorID) {\n    const idx = this.colors.findIndex(clr => clr.id === +colorID)\n    let newColors = [...this.colors]\n    newColors[idx] = { ...newColors[idx], color: randomColor() }\n    this.colors = newColors\n  }\n\n  clearColors () {\n    this.colors = []\n  }\n}\n","import React, { Component } from 'react'\nimport './App.style.sass'\n\nimport { Store } from './store.js'\n\nfunction _prevent ($evt) {\n  $evt.preventDefault()\n  $evt.stopPropagation()\n}\n\nconst store = new Store()\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      colors : Object.freeze(store.colors),\n      amount : 100\n    }\n\n    this.syncData = this.syncData.bind(this)\n    this.handleAdd = this.handleAdd.bind(this)\n    this.handleShuffle = this.handleShuffle.bind(this)\n    this.handleSort = this.handleSort.bind(this)\n    this.handleSwap = this.handleSwap.bind(this)\n    this.handleUpdateColor = this.handleUpdateColor.bind(this)\n    this.handleDeleteColor = this.handleDeleteColor.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n  }\n\n  syncData () {\n    this.setState({ ...this.state, colors: store.colors })\n  }\n\n  handleAdd (amount = 1) {\n    store.appendColors(amount)\n    this.syncData()\n  }\n\n  handleShuffle () {\n    store.shuffleColors()\n    this.syncData()\n  }\n\n  handleSort () {\n    store.sortColorsById()\n    this.syncData()\n  }\n\n  handleSwap (rows) {\n    store.swapColors(rows)\n    this.syncData()\n  }\n\n  handleUpdateColor (id) {\n    store.updateColor(id)\n    this.syncData()\n  }\n\n  handleDeleteColor (id) {\n    store.deleteColor(id)\n    this.syncData()\n  }\n\n  handleClear () {\n    store.clearColors()\n    this.syncData()\n  }\n\n  render () {\n    const TableRows = this.state.colors.map(({ id, color: label, color }) => (\n      <tr\n        key={id}\n        style={{ backgroundColor: color }}\n        className='app-table-row'\n      >\n        {/* <!-- COLOR ID --> */}\n        <td className='app-table-id'>\n          <span\n            className='app-table-label'\n            style={{ padding: '6px' }}\n          >\n            {id}\n          </span>\n        </td>\n\n        {/* <!-- COLOR LABEL --> */}\n        <td\n          className='app-table-cell'\n        >\n          <span className='app-table-label'>\n            {label}\n          </span>\n        </td>\n\n        {/* <!-- ACTION: UPDATE COLOR --> */}\n        <td className='app-table-cell app-table-action'>\n\n          <a\n            href='#update'\n            className='button__update pure-button app-button app-table-label'\n            onClick={($evt) => { this.handleUpdateColor(id); _prevent($evt) }}\n          >\n            {/* <!-- button icon --> */}\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              viewBox='0 0 51.4 51.4'\n              width='24'\n              height='24'\n            >\n              <g fill='#fff'><path d='M1.7 25.2a1 1 0 0 0 1-1c0-6.065 4.935-11 11-11h24v8.964L51.4 12.2 37.7 2.236V11.2h-24a13.02 13.02 0 0 0-13 13 1 1 0 0 0 1 1zm38-19.036L48 12.2l-8.3 6.036V6.164zm10 20.036a1 1 0 0 0-1 1c0 6.065-4.935 11-11 11h-24v-8.964L0 39.2l13.7 9.964V40.2h24a13.02 13.02 0 0 0 13-13 1 1 0 0 0-1-1zm-38 19.036L3.4 39.2l8.3-6.036v12.072z' /></g>\n            </svg>\n          </a>\n        </td>\n\n        {/* <!-- ACTION: DELETE COLOR --> */}\n\n        <td className='app-table-cell app-table-action'>\n          <a\n            href='#delete'\n            className='button__delete pure-button app-button app-table-label'\n            onClick={($evt) => { this.handleDeleteColor(id); _prevent($evt) }}\n          >\n            {/* <!-- button icon --> */}\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              viewBox='0 0 59 59'\n              width='24'\n              height='24'\n            >\n              <g fill='#fff'><path d='M29.5 51a1 1 0 0 0 1-1V17a1 1 0 1 0-2 0v33a1 1 0 0 0 1 1zm-10 0a1 1 0 0 0 1-1V17a1 1 0 1 0-2 0v33a1 1 0 0 0 1 1zm20 0a1 1 0 0 0 1-1V17a1 1 0 1 0-2 0v33a1 1 0 0 0 1 1zm13-45H38.456c-.1-1.25-.495-3.358-1.813-4.7C35.8.434 34.75 0 33.5 0h-10c-1.252 0-2.3.434-3.144 1.3-1.318 1.353-1.703 3.46-1.813 4.7H6.5a1 1 0 1 0 0 2h2.04l1.915 46.02c.037 1.722 1.1 4.98 4.908 4.98h28.272c3.8 0 4.87-3.257 4.907-4.958L50.46 8h2.04a1 1 0 1 0 0-2zM21.792 2.68C22.24 2.223 22.8 2 23.5 2h10c.7 0 1.26.223 1.708.68.805.823 1.128 2.27 1.24 3.32H20.553c.112-1.048.435-2.496 1.24-3.32zm24.752 51.3c-.006.3-.144 3.02-2.908 3.02H15.364c-2.734 0-2.898-2.717-2.9-3.042L10.542 8h37.915l-1.913 45.98z' /></g>\n            </svg>\n          </a>\n        </td>\n      </tr>\n    ))\n\n    return (\n      <div id='app'>\n        <header className='app-header app-u-fixed app-u-pin-t app-u-shadow-lg'>\n          {/* <!-- APP MENU --> */}\n          <div className='app-container app-menu pure-menu pure-menu-horizontal'>\n            {/* <!-- BRAND: framework@version --> */}\n            <span className='app-menu-heading pure-menu-heading app-title'>\n              React\n            </span>\n          </div>\n\n          {/* <!-- APP ACTIONS --> */}\n          <div className='app-actions'>\n            {/* <!-- GRID --> */}\n            <div className='app-wrapper app-container'>\n              {/* <!-- ADD COLOR --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__add'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'LimeGreen' }}\n                  onClick={() => this.handleAdd(1)}\n                >Inserir 1 Item</button>\n              </div>\n\n              {/* <!-- LOAD 50 COLORS --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__populate'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'DodgerBlue' }}\n                  onClick={() => this.handleAdd(50)}\n                >Inserir 50 Itens</button>\n              </div>\n\n              {/* <!-- SWAP 2 ROWS --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__swap'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'OrangeRed' }}\n                  onClick={() => this.handleSwap([0, this.state.colors.length - 1])}\n                >Permutar 2 Itens</button>\n              </div>\n\n              {/* <!-- SHUFFLE COLORS --> */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__shuffle'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'DarkViolet' }}\n                  onClick={this.handleShuffle}\n                >Embaralhar Lista</button>\n              </div>\n\n              {/* <!-- SORT COLORS-- > */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__sort'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'FireBrick' }}\n                  onClick={this.handleSort}\n                >Ordernar Lista</button>\n              </div >\n\n              {/* <!--CLEAR COLORS-- > */}\n              <div className='pure-u-12-24 pure-u-md-8-24 pure-u-xl-4-24'>\n                <button\n                  id='button__clear'\n                  className='pure-button app-button'\n                  style={{ backgroundColor: 'Crimson' }}\n                  onClick={this.handleClear}\n                >Limpar Lista</button>\n              </div >\n            </div >\n          </div >\n        </header >\n\n        {/* <!--APP TABLE-- > */}\n        <div className='app-container app-table-wrapper' >\n          <table className='app-table'>\n            <tbody className='app-table-body'>\n\n              {/* <!-- COLOR --> */}\n              {TableRows}\n            </tbody >\n          </table >\n        </div >\n      </div >\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport '../node_modules/pure-css'\nimport './assets/styles/main.sass'\n\nimport App from './App.jsx'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}